TODO


Assembler and image format for executable

Interrupt table loading from file (format)

Ability to step through program using frontend (-b)
	-b <location> - when PC hits that location break and allow step

Display cycles in machine state

Lua scripting
	timing
	machine configuration (memory, pipes, stack, etc..) 
	program image file 
	memory write out file
	interrupt table file

Queue data structure used to represent pipeline
	Efficiency = Optimal / Actual
	Dependance checking
	Installing bubbles based on dependances
	'squashing' logic in case branch happens

Simple Cocoa frontend

Show pipe status
